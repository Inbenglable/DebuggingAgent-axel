### django/db/migrations/writer.py
<<<<<<< SEARCH
        # Format imports nicely, swapping imports of functions from migration files
        # for comments
        migration_imports = set()
        for line in list(imports):
            if re.match(r"^import (.*)\.\d+[^\s]*$", line):
                migration_imports.add(line.split("import")[1].strip())
                imports.remove(line)
                self.needs_manual_porting = True

        # django.db.migrations is always used, but models import may not be.
        # If models import exists, merge it with migrations import.
        if "from django.db import models" in imports:
            imports.discard("from django.db import models")
            imports.add("from django.db import migrations, models")
        else:
            imports.add("from django.db import migrations")

        # Sort imports by the package / module to be imported (the part after
        # "from" in "from ... import ..." or after "import" in "import ...").
        sorted_imports = sorted(imports, key=lambda i: i.split()[1])
        items["imports"] = "\n".join(sorted_imports) + "\n" if imports else ""
=======
        # Separate import statements into 'import xxx' and 'from xxx import'
        module_imports = {line for line in imports if line.startswith("import ")}
        from_imports = imports.difference(module_imports)

        # Sort imports with 'import xxx' before 'from xxx import ...'
        sorted_imports = sorted(module_imports) + sorted(from_imports)

        items["imports"] = "\n".join(sorted_imports) + "\n" if imports else ""
>>>>>>> REPLACE
