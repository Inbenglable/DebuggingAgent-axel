{
    "search_replace_edits": [
        "### django/db/models/query.py\n<<<<<<< SEARCH\n        return self.query.chain().get_aggregation(self.db, kwargs)\n=======\n        aggregation_result = self.query.chain().get_aggregation(self.db, kwargs)\n        for key, value in aggregation_result.items():\n            if isinstance(value, Window):\n                raise TypeError(\n                    f\"Aggregation field '{key}' contains window function, which is incompatible for aggregation.\"\n                )\n        return aggregation_result\n>>>>>>> REPLACE\n",
        "### django/db/models/expressions.py\n<<<<<<< SEARCH\n        return (\n            template % {\"expression\": expr_sql, \"window\": \" \".join(window_sql).strip()},\n            (*params, *window_params),\n        )\n=======\n        expression_sql = template % {\"expression\": expr_sql, \"window\": \" \".join(window_sql).strip()}\n        if kwargs.get(\"aggregation\", False):\n            raise NotSupportedError(\"Window expressions are not supported within aggregation queries.\")\n        return expression_sql, (*params, *window_params)\n>>>>>>> REPLACE\n",
        "### django/db/models/sql/query.py\n<<<<<<< SEARCH\n    def get_aggregation(self, using, aggregate_exprs):\n=======\n    def get_aggregation(self, using, aggregate_exprs):\n        for aggregate, _ in aggregate_exprs.items():\n            if isinstance(aggregate, Window):\n                raise ValueError(\"Cannot aggregate over window functions directly.\")\n>>>>>>> REPLACE\n"
    ]
}