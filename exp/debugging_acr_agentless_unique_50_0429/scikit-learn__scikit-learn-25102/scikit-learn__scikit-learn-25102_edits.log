### sklearn/utils/_set_output.py
<<<<<<< SEARCH
def _wrap_in_pandas_container(
    data_to_wrap,
    *,
    columns,
    index=None,
):
=======
def _wrap_in_pandas_container(
    data_to_wrap,
    *,
    columns,
    index=None,
    original_input_dtypes=None,
):
>>>>>>> REPLACE

### sklearn/utils/_set_output.py
<<<<<<< SEARCH
    return pd.DataFrame(data_to_wrap, index=index, columns=columns)
=======
    df = pd.DataFrame(data_to_wrap, index=index, columns=columns)
    if original_input_dtypes is not None:
        # Preserve original dtypes for the relevant columns
        for col in df.columns.intersection(original_input_dtypes.index):
            df[col] = df[col].astype(original_input_dtypes[col])
    return df
>>>>>>> REPLACE

### sklearn/utils/_set_output.py
<<<<<<< SEARCH
        columns=estimator.get_feature_names_out,
=======
        columns=estimator.get_feature_names_out,
        original_input_dtypes=getattr(original_input, 'dtypes', None),
>>>>>>> REPLACE
