### xarray/core/combine.py
<<<<<<< SEARCH
                    first_items = pd.Index([index.take([0])
                                        for index in indexes])
=======
                    # For identical indexes, allow bystander effect without ordering
                    if all(index.equals(indexes[0]) for index in indexes[1:]):
                        continue

                    first_items = pd.Index([index.take([0])
                                        for index in indexes])
>>>>>>> REPLACE

### xarray/core/combine.py
<<<<<<< SEARCH
        # Check the overall coordinates are monotonically increasing
        for dim in concatenated.dims:
            if dim in concatenated:
                indexes = concatenated.indexes.get(dim)
                if not (indexes.is_monotonic_increasing
                        or indexes.is_monotonic_decreasing):
                    raise ValueError("Resulting object does not have monotonic"
                                     " global indexes along dimension {}"
                                     .format(dim))
=======
        # Bypass the monotonicity check for identical non-coordinate dimensions
        for dim in concatenated.dims:
            if dim in concatenated:
                indexes = concatenated.indexes.get(dim)
                if not (indexes.is_monotonic_increasing
                        or indexes.is_monotonic_decreasing):
                    # Verify if this is a coordinate that is identical across datasets
                    identical = all(ds.indexes.get(dim).equals(indexes)
                                    for ds in datasets_with_same_vars)
                    if not identical:
                        raise ValueError("Resulting object does not have monotonic"
                                         " global indexes along dimension {}"
                                         .format(dim))
>>>>>>> REPLACE
