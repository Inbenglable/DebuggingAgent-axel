### django/db/migrations/operations/models.py
<<<<<<< SEARCH
    def state_forwards(self, app_label, state):
=======
    def state_forwards(self, app_label, state):
        # Optimization: Combine consecutive AlterTogether operations where applicable
        # Handle unique_together and index_together merging
        model_options = state.models[app_label, self.name]._meta
        current_option = getattr(model_options, self.option_name, None) or set()
        new_option = self.option_value | current_option
        setattr(model_options, self.option_name, new_option)
>>>>>>> REPLACE

### django/db/migrations/operations/models.py
<<<<<<< SEARCH
    def database_forwards(self, app_label, schema_editor, from_state, to_state):
=======
    def database_forwards(self, app_label, schema_editor, from_state, to_state):
        # Optimization: Combine consecutive AlterTogether operations where applicable
        model = to_state.apps.get_model(app_label, self.name)
        if self.allow_migrate_model(schema_editor.connection.alias, model):
            current_constraints = from_state.models[app_label, self.name_lower].options[self.option_name]
            new_constraints = self.option_value | current_constraints
            constraint_action = schema_editor.add_constraint if new_constraints else schema_editor.remove_constraint
            constraint_action(model, new_constraints)
>>>>>>> REPLACE
