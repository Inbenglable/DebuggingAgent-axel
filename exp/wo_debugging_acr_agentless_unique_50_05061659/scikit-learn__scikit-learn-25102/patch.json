{
    "search_replace_edits": [
        "### sklearn/utils/_set_output.py\n<<<<<<< SEARCH\n    def set_output(self, *, transform=None):\n=======\n    def set_output(self, *, transform=None, preserve_dtypes=False):\n        self.preserve_dtypes = preserve_dtypes\n>>>>>>> REPLACE\n",
        "### sklearn/utils/_set_output.py\n<<<<<<< SEARCH\n    return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n=======\n    # Preserve dtypes if preserve_dtypes is set and original_input is a DataFrame\n    if isinstance(original_input, pd.DataFrame) and hasattr(estimator, 'preserve_dtypes') and estimator.preserve_dtypes:\n        return pd.DataFrame(data_to_wrap, index=index, columns=columns).astype(original_input.dtypes)\n\n    return pd.DataFrame(data_to_wrap, index=index, columns=columns)\n>>>>>>> REPLACE\n",
        "### sklearn/utils/_set_output.py\n<<<<<<< SEARCH\n        columns=estimator.get_feature_names_out,\n=======\n        columns=estimator.get_feature_names_out,\n        preserve_dtypes=getattr(estimator, 'preserve_dtypes', False),\n>>>>>>> REPLACE\n"
    ]
}