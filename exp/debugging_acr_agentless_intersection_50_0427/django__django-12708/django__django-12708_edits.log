### django/db/backends/base/schema.py
<<<<<<< SEARCH
        if len(constraint_names) != 1:
            raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
                len(constraint_names),
                model._meta.db_table,
                ", ".join(columns),
            ))
        self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))
=======
        # Allow for multiple constraints if one is unique_together and another is index_together
        if len(constraint_names) > 2:
            raise ValueError("Found too many (%s) constraints for %s(%s)" % (
                len(constraint_names),
                model._meta.db_table,
                ", ".join(columns),
            ))
        if len(constraint_names) == 1:
            constraint_to_delete = constraint_names[0]
        else:
            # Assume the constraint to be deleted is the non-unique one
            unique_constraints = [name for name in constraint_names if 'uniq' in name]
            constraint_to_delete = next(name for name in constraint_names if name not in unique_constraints)

        self.execute(self._delete_constraint_sql(sql, model, constraint_to_delete))
>>>>>>> REPLACE
