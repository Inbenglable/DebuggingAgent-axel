{
    "search_replace_edits": [
        "### django/db/backends/base/schema.py\n<<<<<<< SEARCH\n            if len(constraint_names) != 1:\n                raise ValueError(\"Found wrong number (%s) of constraints for %s(%s)\" % (\n                    len(constraint_names),\n                    model._meta.db_table,\n                    \", \".join(columns),\n                ))\n=======\n            # Allow either one or two constraints to account for unique and index constraints.\n            if not (1 <= len(constraint_names) <= 2):\n                raise ValueError(\"Found wrong number (%s) of constraints for %s(%s) - expected 1 or 2\" % (\n                    len(constraint_names),\n                    model._meta.db_table,\n                    \", \".join(columns),\n                ))\n>>>>>>> REPLACE\n",
        "### django/db/backends/base/schema.py\n<<<<<<< SEARCH\n            model, columns, exclude=meta_constraint_names | meta_index_names,\n=======\n            # By default, we want to filter constraints excluding known meta constraints.\n            # Ensure we don't re-exclude index-together related constraints here if refactoring to indexes.\n            model, columns, unique=False, exclude=meta_constraint_names | meta_index_names,\n>>>>>>> REPLACE\n"
    ]
}