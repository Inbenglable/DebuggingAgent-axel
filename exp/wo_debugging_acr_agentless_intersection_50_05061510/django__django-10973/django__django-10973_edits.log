### django/db/backends/postgresql/client.py
<<<<<<< SEARCH
        passwd = conn_params.get('password', '')
=======
        passwd = conn_params.get('password', '')
        env = os.environ.copy()
        if passwd:
            env['PGPASSWORD'] = passwd
>>>>>>> REPLACE

### django/db/backends/postgresql/client.py
<<<<<<< SEARCH
            if passwd:
                # Create temporary .pgpass file.
                temp_pgpass = NamedTemporaryFile(mode='w+')
                try:
                    print(
                        _escape_pgpass(host) or '*',
                        str(port) or '*',
                        _escape_pgpass(dbname) or '*',
                        _escape_pgpass(user) or '*',
                        _escape_pgpass(passwd),
                        file=temp_pgpass,
                        sep=':',
                        flush=True,
                    )
                    os.environ['PGPASSFILE'] = temp_pgpass.name
                except UnicodeEncodeError:
                    # If the current locale can't encode the data, let the
                    # user input the password manually.
                    pass
            # Allow SIGINT to pass to psql to abort queries.
            signal.signal(signal.SIGINT, signal.SIG_IGN)
            subprocess.check_call(args)
=======
            # Allow SIGINT to pass to psql to abort queries.
            signal.signal(signal.SIG_IGN, signal.SIG_IGN)
            subprocess.run(args, env=env)
>>>>>>> REPLACE
