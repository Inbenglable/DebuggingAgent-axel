{
    "search_replace_edits": [
        "### django/db/backends/sqlite3/base.py\n<<<<<<< SEARCH\n                    violations = chain.from_iterable(\n                        cursor.execute('PRAGMA foreign_key_check(%s)' % table_name).fetchall()\n                        for table_name in table_names\n                    )\n=======\n                    violations = chain.from_iterable(\n                        cursor.execute('PRAGMA foreign_key_check(`%s`)' % table_name.replace('`', '``')).fetchall()\n                        for table_name in table_names\n                    )\n>>>>>>> REPLACE",
        "### django/db/backends/sqlite3/base.py\n<<<<<<< SEARCH\n                    foreign_key = cursor.execute(\n                        'PRAGMA foreign_key_list(%s)' % table_name\n                    ).fetchall()[foreign_key_index]\n=======\n                    foreign_key = cursor.execute(\n                        'PRAGMA foreign_key_list(`%s`)' % table_name.replace('`', '``')\n                    ).fetchall()[foreign_key_index]\n>>>>>>> REPLACE",
        "### django/db/backends/sqlite3/base.py\n<<<<<<< SEARCH\n                            % (\n                                primary_key_column_name, column_name, table_name,\n                                referenced_table_name, column_name, referenced_column_name,\n                                column_name, referenced_column_name,\n                            )\n=======\n                            % (\n                                primary_key_column_name, column_name, table_name.replace('`', '``'),\n                                referenced_table_name.replace('`', '``'), column_name, referenced_column_name,\n                                column_name, referenced_column_name,\n                            )\n>>>>>>> REPLACE"
    ]
}