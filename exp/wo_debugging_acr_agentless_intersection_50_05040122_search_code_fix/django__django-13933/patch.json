{
    "search_replace_edits": [
        "### django/forms/models.py\n<<<<<<< SEARCH\n    default_error_messages = {\n        'invalid_choice': _('Select a valid choice. That choice is not one of'\n                            ' the available choices.'),\n=======\n    default_error_messages = {\n        'invalid_choice': _('Select a valid choice. %(value)s is not one of'\n                            ' the available choices.'),\n>>>>>>> REPLACE\n",
        "### django/db/models/fields/__init__.py\n<<<<<<< SEARCH\n        if self.choices is not None and value not in self.empty_values:\n=======\n        if self.choices is not None and value not in self.empty_values:\n            invalid_choice_message = self.error_messages.get('invalid_choice', 'Select a valid choice. %(value)s is not one of the available choices.')\n>>>>>>> REPLACE\n",
        "### django/db/models/fields/__init__.py\n<<<<<<< SEARCH\n            raise exceptions.ValidationError(\n                self.error_messages['invalid_choice'],\n                code='invalid_choice',\n=======\n            raise exceptions.ValidationError(\n                invalid_choice_message,\n                code='invalid_choice',\n>>>>>>> REPLACE\n"
    ]
}