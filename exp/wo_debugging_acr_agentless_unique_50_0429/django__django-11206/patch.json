{
    "search_replace_edits": [
        "### django/utils/numberformat.py\n<<<<<<< SEARCH\n        # Format values with more than 200 digits (an arbitrary cutoff) using\n        # scientific notation to avoid high memory usage in {:f}'.format().\n        _, digits, exponent = number.as_tuple()\n        if abs(exponent) + len(digits) > 200:\n            number = '{:e}'.format(number)\n            coefficient, exponent = number.split('e')\n            # Format the coefficient.\n            coefficient = format(\n                coefficient, decimal_sep, decimal_pos, grouping,\n                thousand_sep, force_grouping, use_l10n,\n            )\n            return '{}e{}'.format(coefficient, exponent)\n        else:\n            str_number = '{:f}'.format(number)\n=======\n        # Format small values according to decimal_pos without using scientific\n        # notation if decimal positions are provided.\n        str_number = '{:f}'.format(number)\n        int_part_zeros = len(str_number.split('.')[0].lstrip('0'))\n        if decimal_pos is not None and exponent < 0 and int_part_zeros + abs(exponent) > decimal_pos:\n            # If number is smaller than what can be encoded with decimal_pos\n            # return a zero-decimal-formatted string\n            return '0' + decimal_sep + '0' * decimal_pos\n>>>>>>> REPLACE\n"
    ]
}