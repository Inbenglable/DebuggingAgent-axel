{
    "search_replace_edits": [
        "### sklearn/ensemble/iforest.py\n<<<<<<< SEARCH\n                 behaviour='old',\n=======\n                 warm_start=False,\n                 behaviour='old',\n>>>>>>> REPLACE\n",
        "### sklearn/ensemble/iforest.py\n<<<<<<< SEARCH\n            random_state=random_state,\n=======\n            warm_start=warm_start,\n            random_state=random_state,\n>>>>>>> REPLACE\n",
        "### sklearn/ensemble/iforest.py\n<<<<<<< SEARCH\n    random_state : int, RandomState instance or None, optional (default=None)\n=======\n    warm_start : bool, optional (default=False)\n        When set to ``True``, reuse the solution of the previous call to fit\n        and add more estimators to the ensemble, otherwise, just fit a whole\n        new forest. See :term:`the Glossary <warm_start>`.\n\n    random_state : int, RandomState instance or None, optional (default=None)\n>>>>>>> REPLACE\n",
        "### sklearn/ensemble/iforest.py\n<<<<<<< SEARCH\n        super()._fit(X, y, max_samples,\n=======\n        if not self.warm_start:\n            self.estimators_ = []\n\n        super()._fit(X, y, max_samples,\n>>>>>>> REPLACE\n"
    ]
}