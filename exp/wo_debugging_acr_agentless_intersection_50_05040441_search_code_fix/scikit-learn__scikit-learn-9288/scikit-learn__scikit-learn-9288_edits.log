### sklearn/cluster/k_means_.py
<<<<<<< SEARCH
    seeds = random_state.randint(np.iinfo(np.int32).max, size=n_init)
=======
    seeds = [random_state.randint(np.iinfo(np.int32).max) for _ in range(n_init)]
>>>>>>> REPLACE

### sklearn/cluster/k_means_.py
<<<<<<< SEARCH
        labels, inertia, centers, n_iters = zip(*results)
=======
        labels, inertia, centers, n_iters = zip(*results)
        best_inertia_value = min(inertia)
        consistent_inertia_indices = [i for i, value in enumerate(inertia) if value == best_inertia_value]
        best = random_state.choice(consistent_inertia_indices)
>>>>>>> REPLACE
