### django/db/backends/base/schema.py
<<<<<<< SEARCH
        if len(constraint_names) != 1:
=======
        # When both unique and index constraints exist, prioritize the removal of index constraints first.
        if len(constraint_names) != 1:
            # Check if the constraint is a unique constraint and should not be removed
            unique_constraints = self._constraint_names(model, columns, unique=True)
            if unique_constraints:
                constraint_names = [name for name in constraint_names if name not in unique_constraints]
>>>>>>> REPLACE
### django/db/backends/base/schema.py
<<<<<<< SEARCH
        self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))
=======
        # Ensure only the identified index constraint is removed
        if constraint_names:
            self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))
>>>>>>> REPLACE