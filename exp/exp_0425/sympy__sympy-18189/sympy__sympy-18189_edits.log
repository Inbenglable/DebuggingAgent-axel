### sympy/solvers/diophantine.py
<<<<<<< SEARCH
                dict_sym_index = dict(zip(syms, range(len(syms))))
                return {tuple([t[dict_sym_index[i]] for i in var])
=======
                if syms != var:
                    dict_sym_index = dict(zip(syms, range(len(syms))))
                    results = {tuple([t[dict_sym_index[i]] for i in var])
                    for t in diophantine(eq, param, permute=permute)}
                    return results
>>>>>>> REPLACE

### sympy/solvers/diophantine.py
<<<<<<< SEARCH
    final_soln = set([])
=======
    if permute and syms is not None and syms != var:
        sol_syms_order = [var.index(s) for s in syms]
        sols = {tuple(sol[i] for i in sol_syms_order) for sol in sols}
    final_soln = set([])
>>>>>>> REPLACE
