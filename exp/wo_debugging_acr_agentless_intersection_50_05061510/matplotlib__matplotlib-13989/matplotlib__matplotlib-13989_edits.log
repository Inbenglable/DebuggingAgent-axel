### lib/matplotlib/axes/_axes.py
<<<<<<< SEARCH
density = bool(density) or bool(normed)
if density and not stacked:
    hist_kwargs = dict(density=density)
=======
density = bool(density) or bool(normed)
if density and not stacked:
    # Ensure range is respected for density computations.
    hist_kwargs = dict(density=density)
    if bin_range is not None:
        hist_kwargs['range'] = bin_range
>>>>>>> REPLACE

### lib/matplotlib/axes/_axes.py
<<<<<<< SEARCH
for i in range(nx):
    # this will automatically overwrite bins,
    # so that each histogram uses the same bins
    m, bins = np.histogram(x[i], bins, weights=w[i], **hist_kwargs)
=======
for i in range(nx):
    # this will automatically overwrite bins,
    # so that each histogram uses the same bins
    if density:
        # Use histogram_bin_edges to respect range for density computations
        bins = histogram_bin_edges(x[i], bins=bins, range=bin_range)
    m, bins = np.histogram(x[i], bins=bins, weights=w[i], **hist_kwargs)
>>>>>>> REPLACE
