### django/db/backends/postgresql/client.py
<<<<<<< SEARCH
        if user:
            args += ['-U', user]
        if host:
            args += ['-h', host]
        if port:
            args += ['-p', str(port)]
        args += [dbname]

        temp_pgpass = None
=======
        if user:
            args += ['-U', user]
        if host:
            args += ['-h', host]
        if port:
            args += ['-p', str(port)]
        args += [dbname]

        env = os.environ.copy()
        if passwd:
            env['PGPASSWORD'] = passwd
>>>>>>> REPLACE

### django/db/backends/postgresql/client.py
<<<<<<< SEARCH
            signal.signal(signal.SIGINT, signal.SIG_IGN)
            subprocess.check_call(args)
        finally:
            # Restore the original SIGINT handler.
=======
            signal.signal(signal.SIGINT, signal.SIG_IGN)
            subprocess.run(args, env=env, check=True)
        finally:
            # Restore the original SIGINT handler.
>>>>>>> REPLACE

### django/db/backends/postgresql/client.py
<<<<<<< SEARCH
            if temp_pgpass:
                temp_pgpass.close()
                if 'PGPASSFILE' in os.environ:  # unit tests need cleanup
                    del os.environ['PGPASSFILE']
=======
>>>>>>> REPLACE
