{
    "search_replace_edits": [
        "### django/db/models/functions/datetime.py\n<<<<<<< SEARCH\ndef as_sql(self, compiler, connection):\n    # Cast to date rather than truncate to date.\n    lhs, lhs_params = compiler.compile(self.lhs)\n    tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n    sql = connection.ops.datetime_cast_date_sql(lhs, tzname)\n=======\ndef as_sql(self, compiler, connection):\n    # Cast to date rather than truncate to date.\n    lhs, lhs_params = compiler.compile(self.lhs)\n    tzname = self.tzinfo.zone if self.tzinfo else (timezone.get_current_timezone_name() if settings.USE_TZ else None)\n    sql = connection.ops.datetime_cast_date_sql(lhs, tzname)\n>>>>>>> REPLACE\n",
        "### django/db/models/functions/datetime.py\n<<<<<<< SEARCH\ndef as_sql(self, compiler, connection):\n    # Cast to time rather than truncate to time.\n    lhs, lhs_params = compiler.compile(self.lhs)\n    tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n    sql = connection.ops.datetime_cast_time_sql(lhs, tzname)\n=======\ndef as_sql(self, compiler, connection):\n    # Cast to time rather than truncate to time.\n    lhs, lhs_params = compiler.compile(self.lhs)\n    tzname = self.tzinfo.zone if self.tzinfo else (timezone.get_current_timezone_name() if settings.USE_TZ else None)\n    sql = connection.ops.datetime_cast_time_sql(lhs, tzname)\n>>>>>>> REPLACE\n"
    ]
}