{
    "search_replace_edits": [
        "### django/db/migrations/optimizer.py\n<<<<<<< SEARCH\nfor i, operation in enumerate(operations):\n    right = True  # Should we reduce on the right or on the left.\n    # Compare it to each operation after it\n    for j, other in enumerate(operations[i + 1 :]):\n        result = operation.reduce(other, app_label)\n=======\ni = 0\nwhile i < len(operations):\n    operation = operations[i]\n    # Check for consecutive AddIndex and RemoveIndex cancels\n    if isinstance(operation, migrations.AddIndex):\n        for j, other in enumerate(operations[i + 1:], start=i + 1):\n            if isinstance(other, migrations.RemoveIndex) and operation.model_name == other.model_name and operation.index.name == other.name:\n                # Remove both operations\n                operations.pop(j)\n                operations.pop(i)\n                i -= 1  # step back to adjust for removed items\n                break\n>>>>>>> REPLACE\n"
    ]
}