### sklearn/cluster/k_means_.py
<<<<<<< SEARCH
    if effective_n_jobs(n_jobs) == 1:
=======
    seeds = random_state.randint(np.iinfo(np.int32).max, size=n_init)
    if effective_n_jobs(n_jobs) == 1:
>>>>>>> REPLACE

### sklearn/cluster/k_means_.py
<<<<<<< SEARCH
        seeds = random_state.randint(np.iinfo(np.int32).max, size=n_init)
        results = Parallel(n_jobs=n_jobs, verbose=0)(
=======
        results = Parallel(n_jobs=n_jobs, verbose=0)(
>>>>>>> REPLACE

### sklearn/cluster/k_means_.py
<<<<<<< SEARCH
                random_state=random_state)
=======
                random_state=seed)
>>>>>>> REPLACE
