Testing against Django installed in '/data/swe-fl/TMP/testbed/django__django-11551/django'
Importing application modeladmin
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).

test_actions_not_unique (modeladmin.test_checks.ActionsCheckTests) ... ok
test_actions_unique (modeladmin.test_checks.ActionsCheckTests) ... ok
test_custom_permissions_require_matching_has_method (modeladmin.test_checks.ActionsCheckTests) ... ok
test_autocomplete_e036 (modeladmin.test_checks.AutocompleteFieldsTests) ... ok
test_autocomplete_e037 (modeladmin.test_checks.AutocompleteFieldsTests) ... ok
test_autocomplete_e039 (modeladmin.test_checks.AutocompleteFieldsTests) ... ok
test_autocomplete_e040 (modeladmin.test_checks.AutocompleteFieldsTests) ... ok
test_autocomplete_e38 (modeladmin.test_checks.AutocompleteFieldsTests) ... ok
test_autocomplete_is_onetoone (modeladmin.test_checks.AutocompleteFieldsTests) ... ok
test_autocomplete_is_valid (modeladmin.test_checks.AutocompleteFieldsTests) ... ok
test_invalid_field_type (modeladmin.test_checks.DateHierarchyCheckTests) ... ok
test_missing_field (modeladmin.test_checks.DateHierarchyCheckTests) ... ok
test_related_invalid_field_type (modeladmin.test_checks.DateHierarchyCheckTests) ... ok
test_related_valid_case (modeladmin.test_checks.DateHierarchyCheckTests) ... ok
test_valid_case (modeladmin.test_checks.DateHierarchyCheckTests) ... ok
test_not_integer (modeladmin.test_checks.ExtraCheckTests) ... ok
test_valid_case (modeladmin.test_checks.ExtraCheckTests) ... ok
test_duplicate_fields_in_fields (modeladmin.test_checks.FieldsCheckTests) ... ok
test_inline (modeladmin.test_checks.FieldsCheckTests) ... ok
test_duplicate_fields (modeladmin.test_checks.FieldsetsCheckTests) ... ok
test_duplicate_fields_in_fieldsets (modeladmin.test_checks.FieldsetsCheckTests) ... ok
test_fieldsets_with_custom_form_validation (modeladmin.test_checks.FieldsetsCheckTests) ... ok
test_item_not_a_pair (modeladmin.test_checks.FieldsetsCheckTests) ... ok
test_missing_fields_key (modeladmin.test_checks.FieldsetsCheckTests) ... ok
test_non_iterable_item (modeladmin.test_checks.FieldsetsCheckTests) ... ok
test_not_iterable (modeladmin.test_checks.FieldsetsCheckTests) ... ok
test_second_element_of_item_not_a_dict (modeladmin.test_checks.FieldsetsCheckTests) ... ok
test_specified_both_fields_and_fieldsets (modeladmin.test_checks.FieldsetsCheckTests) ... ok
test_valid_case (modeladmin.test_checks.FieldsetsCheckTests) ... ok
test_invalid_field_type (modeladmin.test_checks.FilterHorizontalCheckTests) ... ok
test_missing_field (modeladmin.test_checks.FilterHorizontalCheckTests) ... ok
test_not_iterable (modeladmin.test_checks.FilterHorizontalCheckTests) ... ok
test_valid_case (modeladmin.test_checks.FilterHorizontalCheckTests) ... ok
test_invalid_field_type (modeladmin.test_checks.FilterVerticalCheckTests) ... ok
test_missing_field (modeladmin.test_checks.FilterVerticalCheckTests) ... ok
test_not_iterable (modeladmin.test_checks.FilterVerticalCheckTests) ... ok
test_valid_case (modeladmin.test_checks.FilterVerticalCheckTests) ... ok
test_missing_field (modeladmin.test_checks.FkNameCheckTests) ... ok
test_valid_case (modeladmin.test_checks.FkNameCheckTests) ... ok
test_fieldsets_with_custom_form_validation (modeladmin.test_checks.FormCheckTests) ... ok
test_invalid_type (modeladmin.test_checks.FormCheckTests) ... ok
test_valid_case (modeladmin.test_checks.FormCheckTests) ... ok
test_inline_without_formset_class (modeladmin.test_checks.FormsetCheckTests) ... ok
test_invalid_type (modeladmin.test_checks.FormsetCheckTests) ... ok
test_valid_case (modeladmin.test_checks.FormsetCheckTests) ... ok
test_invalid_callable (modeladmin.test_checks.InlinesCheckTests) ... ok
test_invalid_model (modeladmin.test_checks.InlinesCheckTests) ... ok
test_invalid_model_type (modeladmin.test_checks.InlinesCheckTests) ... ok
test_missing_model_field (modeladmin.test_checks.InlinesCheckTests) ... ok
test_not_correct_inline_field (modeladmin.test_checks.InlinesCheckTests) ... ok
test_not_iterable (modeladmin.test_checks.InlinesCheckTests) ... ok
test_not_model_admin (modeladmin.test_checks.InlinesCheckTests) ... ok
test_valid_case (modeladmin.test_checks.InlinesCheckTests) ... ok
test_both_list_editable_and_list_display_links (modeladmin.test_checks.ListDisplayEditableTests) ... FAIL
test_list_display_first_item_in_list_editable (modeladmin.test_checks.ListDisplayEditableTests) ... FAIL
test_list_display_first_item_in_list_editable_no_list_display_links (modeladmin.test_checks.ListDisplayEditableTests) ... FAIL
test_list_display_first_item_same_as_list_editable_first_item (modeladmin.test_checks.ListDisplayEditableTests) ... FAIL
test_list_display_first_item_same_as_list_editable_no_list_display_links (modeladmin.test_checks.ListDisplayEditableTests) ... FAIL
test_list_display_links_is_none (modeladmin.test_checks.ListDisplayEditableTests) ... FAIL
test_None_is_valid_case (modeladmin.test_checks.ListDisplayLinksCheckTests) ... ok
test_list_display_link_checked_for_list_tuple_if_get_list_display_overridden (modeladmin.test_checks.ListDisplayLinksCheckTests) ... ok
test_list_display_links_check_skipped_if_get_list_display_overridden (modeladmin.test_checks.ListDisplayLinksCheckTests) ... ok
test_missing_field (modeladmin.test_checks.ListDisplayLinksCheckTests) ... ok
test_missing_in_list_display (modeladmin.test_checks.ListDisplayLinksCheckTests) ... ok
test_not_iterable (modeladmin.test_checks.ListDisplayLinksCheckTests) ... ok
test_valid_case (modeladmin.test_checks.ListDisplayLinksCheckTests) ... FAIL
test_invalid_field_type (modeladmin.test_checks.ListDisplayTests) ... FAIL
test_missing_field (modeladmin.test_checks.ListDisplayTests) ... ok
test_not_iterable (modeladmin.test_checks.ListDisplayTests) ... ok
test_valid_case (modeladmin.test_checks.ListDisplayTests) ... FAIL
test_valid_field_accessible_via_instance (modeladmin.test_checks.ListDisplayTests) ... FAIL
test_callable (modeladmin.test_checks.ListFilterTests) ... ok
test_list_filter_is_func (modeladmin.test_checks.ListFilterTests) ... ok
test_list_filter_validation (modeladmin.test_checks.ListFilterTests) ... ok
test_missing_field (modeladmin.test_checks.ListFilterTests) ... ok
test_not_associated_with_field_name (modeladmin.test_checks.ListFilterTests) ... ok
test_not_callable (modeladmin.test_checks.ListFilterTests) ... ok
test_not_filter (modeladmin.test_checks.ListFilterTests) ... ok
test_not_filter_again (modeladmin.test_checks.ListFilterTests) ... ok
test_not_filter_again_again (modeladmin.test_checks.ListFilterTests) ... ok
test_not_list_filter_class (modeladmin.test_checks.ListFilterTests) ... ok
test_valid_case (modeladmin.test_checks.ListFilterTests) ... ok
test_not_integer (modeladmin.test_checks.ListMaxShowAllCheckTests) ... ok
test_valid_case (modeladmin.test_checks.ListMaxShowAllCheckTests) ... ok
test_not_integer (modeladmin.test_checks.ListPerPageCheckTests) ... ok
test_valid_case (modeladmin.test_checks.ListPerPageCheckTests) ... ok
test_invalid_type (modeladmin.test_checks.ListSelectRelatedCheckTests) ... ok
test_valid_case (modeladmin.test_checks.ListSelectRelatedCheckTests) ... ok
test_not_integer (modeladmin.test_checks.MaxNumCheckTests) ... ok
test_valid_case (modeladmin.test_checks.MaxNumCheckTests) ... ok
test_not_integer (modeladmin.test_checks.MinNumCheckTests) ... ok
test_valid_case (modeladmin.test_checks.MinNumCheckTests) ... ok
test_invalid_expression (modeladmin.test_checks.OrderingCheckTests) ... ok
test_not_iterable (modeladmin.test_checks.OrderingCheckTests) ... ok
test_random_marker_not_alone (modeladmin.test_checks.OrderingCheckTests) ... ok
test_valid_case (modeladmin.test_checks.OrderingCheckTests) ... ok
test_valid_complex_case (modeladmin.test_checks.OrderingCheckTests) ... ok
test_valid_expression (modeladmin.test_checks.OrderingCheckTests) ... ok
test_valid_random_marker_case (modeladmin.test_checks.OrderingCheckTests) ... ok
test_invalid_field_type (modeladmin.test_checks.PrepopulatedFieldsCheckTests) ... ok
test_missing_field (modeladmin.test_checks.PrepopulatedFieldsCheckTests) ... ok
test_missing_field_again (modeladmin.test_checks.PrepopulatedFieldsCheckTests) ... ok
test_not_dictionary (modeladmin.test_checks.PrepopulatedFieldsCheckTests) ... ok
test_not_list_or_tuple (modeladmin.test_checks.PrepopulatedFieldsCheckTests) ... ok
test_one_to_one_field (modeladmin.test_checks.PrepopulatedFieldsCheckTests) ... ok
test_valid_case (modeladmin.test_checks.PrepopulatedFieldsCheckTests) ... ok
test_invalid_field_type (modeladmin.test_checks.RadioFieldsCheckTests) ... ok
test_invalid_value (modeladmin.test_checks.RadioFieldsCheckTests) ... ok
test_missing_field (modeladmin.test_checks.RadioFieldsCheckTests) ... ok
test_not_dictionary (modeladmin.test_checks.RadioFieldsCheckTests) ... ok
test_valid_case (modeladmin.test_checks.RadioFieldsCheckTests) ... ok
test_invalid_field_type (modeladmin.test_checks.RawIdCheckTests) ... ok
test_missing_field (modeladmin.test_checks.RawIdCheckTests) ... ok
test_not_iterable (modeladmin.test_checks.RawIdCheckTests) ... ok
test_valid_case (modeladmin.test_checks.RawIdCheckTests) ... ok
test_not_boolean (modeladmin.test_checks.SaveAsCheckTests) ... ok
test_valid_case (modeladmin.test_checks.SaveAsCheckTests) ... ok
test_not_boolean (modeladmin.test_checks.SaveOnTopCheckTests) ... ok
test_valid_case (modeladmin.test_checks.SaveOnTopCheckTests) ... ok
test_not_iterable (modeladmin.test_checks.SearchFieldsCheckTests) ... ok

======================================================================
FAIL: test_both_list_editable_and_list_display_links (modeladmin.test_checks.ListDisplayEditableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 1316, in test_both_list_editable_and_list_display_links
    id='admin.E123',
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 23, in assertIsInvalid
    self.assertEqual(admin_obj.check(), [Error(msg, hint=hint, obj=invalid_obj, id=id)])
AssertionError: Lists differ: [<Err[28 chars] of 'list_display[0]' refers to 'name', which [537 chars]23'>] != [<Err[28 chars] of 'name' cannot be in both 'list_editable' a[182 chars]23'>]

First differing element 0:
<Erro[27 chars] of 'list_display[0]' refers to 'name', which [270 chars]108'>
<Erro[27 chars] of 'name' cannot be in both 'list_editable' a[181 chars]123'>

First list contains 1 additional elements.
First extra element 1:
<Error: level=40, msg="The value of 'name' cannot be in both 'list_editable' and 'list_display_links'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayEditableTests.test_both_list_editable_and_list_display_links.<locals>.ProductAdmin'>, id='admin.E123'>

Diff is 906 characters long. Set self.maxDiff to None to see it.

======================================================================
FAIL: test_list_display_first_item_in_list_editable (modeladmin.test_checks.ListDisplayEditableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 1273, in test_list_display_first_item_in_list_editable
    self.assertIsValid(ProductAdmin, ValidationTestModel)
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 43, in assertIsValid
    self.assertEqual(admin_obj.check(), [])
AssertionError: Lists differ: [<Error: level=40, msg="The value of 'list[1019 chars]08'>] != []

First list contains 3 additional elements.
First extra element 0:
<Error: level=40, msg="The value of 'list_display[0]' refers to 'name', which is not a callable, an attribute of 'ProductAdmin', or an attribute or method on 'modeladmin.ValidationTestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayEditableTests.test_list_display_first_item_in_list_editable.<locals>.ProductAdmin'>, id='admin.E108'>

Diff is 1080 characters long. Set self.maxDiff to None to see it.

======================================================================
FAIL: test_list_display_first_item_in_list_editable_no_list_display_links (modeladmin.test_checks.ListDisplayEditableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 1304, in test_list_display_first_item_in_list_editable_no_list_display_links
    id='admin.E124',
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 23, in assertIsInvalid
    self.assertEqual(admin_obj.check(), [Error(msg, hint=hint, obj=invalid_obj, id=id)])
AssertionError: Lists differ: [<Err[33 chars]list_display[0]' refers to 'name', which is no[1393 chars]24'>] != [<Err[33 chars]list_editable[1]' refers to the first field in[261 chars]24'>]

First differing element 0:
<Erro[32 chars]list_display[0]' refers to 'name', which is no[286 chars]108'>
<Erro[32 chars]list_editable[1]' refers to the first field in[260 chars]124'>

First list contains 3 additional elements.
First extra element 1:
<Error: level=40, msg="The value of 'list_display[1]' refers to 'slug', which is not a callable, an attribute of 'ProductAdmin', or an attribute or method on 'modeladmin.ValidationTestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayEditableTests.test_list_display_first_item_in_list_editable_no_list_display_links.<locals>.ProductAdmin'>, id='admin.E108'>

Diff is 1857 characters long. Set self.maxDiff to None to see it.

======================================================================
FAIL: test_list_display_first_item_same_as_list_editable_first_item (modeladmin.test_checks.ListDisplayEditableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 1262, in test_list_display_first_item_same_as_list_editable_first_item
    self.assertIsValid(ProductAdmin, ValidationTestModel)
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 43, in assertIsValid
    self.assertEqual(admin_obj.check(), [])
AssertionError: Lists differ: [<Error: level=40, msg="The value of 'list[1067 chars]08'>] != []

First list contains 3 additional elements.
First extra element 0:
<Error: level=40, msg="The value of 'list_display[0]' refers to 'name', which is not a callable, an attribute of 'ProductAdmin', or an attribute or method on 'modeladmin.ValidationTestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayEditableTests.test_list_display_first_item_same_as_list_editable_first_item.<locals>.ProductAdmin'>, id='admin.E108'>

Diff is 1128 characters long. Set self.maxDiff to None to see it.

======================================================================
FAIL: test_list_display_first_item_same_as_list_editable_no_list_display_links (modeladmin.test_checks.ListDisplayEditableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 1288, in test_list_display_first_item_same_as_list_editable_no_list_display_links
    id='admin.E124',
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 23, in assertIsInvalid
    self.assertEqual(admin_obj.check(), [Error(msg, hint=hint, obj=invalid_obj, id=id)])
AssertionError: Lists differ: [<Err[33 chars]list_display[0]' refers to 'name', which is no[647 chars]24'>] != [<Err[33 chars]list_editable[0]' refers to the first field in[266 chars]24'>]

First differing element 0:
<Erro[32 chars]list_display[0]' refers to 'name', which is no[291 chars]108'>
<Erro[32 chars]list_editable[0]' refers to the first field in[265 chars]124'>

First list contains 1 additional elements.
First extra element 1:
<Error: level=40, msg="The value of 'list_editable[0]' refers to the first field in 'list_display' ('name'), which cannot be used unless 'list_display_links' is set.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayEditableTests.test_list_display_first_item_same_as_list_editable_no_list_display_links.<locals>.ProductAdmin'>, id='admin.E124'>

Diff is 1110 characters long. Set self.maxDiff to None to see it.

======================================================================
FAIL: test_list_display_links_is_none (modeladmin.test_checks.ListDisplayEditableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 1251, in test_list_display_links_is_none
    self.assertIsValid(ProductAdmin, ValidationTestModel)
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 43, in assertIsValid
    self.assertEqual(admin_obj.check(), [])
AssertionError: Lists differ: [<Error: level=40, msg="The value of 'list[977 chars]08'>] != []

First list contains 3 additional elements.
First extra element 0:
<Error: level=40, msg="The value of 'list_display[0]' refers to 'name', which is not a callable, an attribute of 'ProductAdmin', or an attribute or method on 'modeladmin.ValidationTestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayEditableTests.test_list_display_links_is_none.<locals>.ProductAdmin'>, id='admin.E108'>

Diff is 1038 characters long. Set self.maxDiff to None to see it.

======================================================================
FAIL: test_valid_case (modeladmin.test_checks.ListDisplayLinksCheckTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 575, in test_valid_case
    self.assertIsValid(TestModelAdmin, ValidationTestModel)
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 43, in assertIsValid
    self.assertEqual(admin_obj.check(), [])
AssertionError: Lists differ: [<Error: level=40, msg="The value of 'list[283 chars]08'>] != []

First list contains 1 additional elements.
First extra element 0:
<Error: level=40, msg="The value of 'list_display[0]' refers to 'name', which is not a callable, an attribute of 'TestModelAdmin', or an attribute or method on 'modeladmin.ValidationTestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayLinksCheckTests.test_valid_case.<locals>.TestModelAdmin'>, id='admin.E108'>

- [<Error: level=40, msg="The value of 'list_display[0]' refers to 'name', which is not a callable, an attribute of 'TestModelAdmin', or an attribute or method on 'modeladmin.ValidationTestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayLinksCheckTests.test_valid_case.<locals>.TestModelAdmin'>, id='admin.E108'>]
+ []

======================================================================
FAIL: test_invalid_field_type (modeladmin.test_checks.ListDisplayTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 498, in test_invalid_field_type
    'admin.E109'
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 23, in assertIsInvalid
    self.assertEqual(admin_obj.check(), [Error(msg, hint=hint, obj=invalid_obj, id=id)])
AssertionError: Lists differ: [<Err[45 chars][0]' refers to 'users', which is not a callabl[228 chars]08'>] != [<Err[45 chars][0]' must not be a ManyToManyField.", hint=Non[118 chars]09'>]

First differing element 0:
<Erro[44 chars][0]' refers to 'users', which is not a callabl[227 chars]108'>
<Erro[44 chars][0]' must not be a ManyToManyField.", hint=Non[117 chars]109'>

- [<Error: level=40, msg="The value of 'list_display[0]' refers to 'users', which is not a callable, an attribute of 'TestModelAdmin', or an attribute or method on 'modeladmin.ValidationTestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayTests.test_invalid_field_type.<locals>.TestModelAdmin'>, id='admin.E108'>]
+ [<Error: level=40, msg="The value of 'list_display[0]' must not be a ManyToManyField.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayTests.test_invalid_field_type.<locals>.TestModelAdmin'>, id='admin.E109'>]

======================================================================
FAIL: test_valid_case (modeladmin.test_checks.ListDisplayTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 510, in test_valid_case
    self.assertIsValid(TestModelAdmin, ValidationTestModel)
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 43, in assertIsValid
    self.assertEqual(admin_obj.check(), [])
AssertionError: Lists differ: [<Error: level=40, msg="The value of 'list[273 chars]08'>] != []

First list contains 1 additional elements.
First extra element 0:
<Error: level=40, msg="The value of 'list_display[0]' refers to 'name', which is not a callable, an attribute of 'TestModelAdmin', or an attribute or method on 'modeladmin.ValidationTestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayTests.test_valid_case.<locals>.TestModelAdmin'>, id='admin.E108'>

- [<Error: level=40, msg="The value of 'list_display[0]' refers to 'name', which is not a callable, an attribute of 'TestModelAdmin', or an attribute or method on 'modeladmin.ValidationTestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayTests.test_valid_case.<locals>.TestModelAdmin'>, id='admin.E108'>]
+ []

======================================================================
FAIL: test_valid_field_accessible_via_instance (modeladmin.test_checks.ListDisplayTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 529, in test_valid_field_accessible_via_instance
    self.assertIsValid(TestModelAdmin, TestModel)
  File "/data/swe-fl/TMP/testbed/django__django-11551/tests/modeladmin/test_checks.py", line 43, in assertIsValid
    self.assertEqual(admin_obj.check(), [])
AssertionError: Lists differ: [<Error: level=40, msg="The value of 'list[289 chars]08'>] != []

First list contains 1 additional elements.
First extra element 0:
<Error: level=40, msg="The value of 'list_display[0]' refers to 'field', which is not a callable, an attribute of 'TestModelAdmin', or an attribute or method on 'modeladmin.TestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayTests.test_valid_field_accessible_via_instance.<locals>.TestModelAdmin'>, id='admin.E108'>

- [<Error: level=40, msg="The value of 'list_display[0]' refers to 'field', which is not a callable, an attribute of 'TestModelAdmin', or an attribute or method on 'modeladmin.TestModel'.", hint=None, obj=<class 'modeladmin.test_checks.ListDisplayTests.test_valid_field_accessible_via_instance.<locals>.TestModelAdmin'>, id='admin.E108'>]
+ []

----------------------------------------------------------------------
Ran 120 tests in 0.040s

FAILED (failures=10)

ERROR conda.cli.main_run:execute(125): `conda run ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 modeladmin.test_checks` failed. (See above for error)
