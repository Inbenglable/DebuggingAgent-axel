### sklearn/utils/_set_output.py
<<<<<<< SEARCH
    def set_output(self, *, transform=None):
=======
    def set_output(self, *, transform=None, preserve_dtypes=False):
        self.preserve_dtypes = preserve_dtypes
>>>>>>> REPLACE

### sklearn/utils/_set_output.py
<<<<<<< SEARCH
    return pd.DataFrame(data_to_wrap, index=index, columns=columns)
=======
    # Preserve dtypes if preserve_dtypes is set and original_input is a DataFrame
    if isinstance(original_input, pd.DataFrame) and hasattr(estimator, 'preserve_dtypes') and estimator.preserve_dtypes:
        return pd.DataFrame(data_to_wrap, index=index, columns=columns).astype(original_input.dtypes)

    return pd.DataFrame(data_to_wrap, index=index, columns=columns)
>>>>>>> REPLACE

### sklearn/utils/_set_output.py
<<<<<<< SEARCH
        columns=estimator.get_feature_names_out,
=======
        columns=estimator.get_feature_names_out,
        preserve_dtypes=getattr(estimator, 'preserve_dtypes', False),
>>>>>>> REPLACE
