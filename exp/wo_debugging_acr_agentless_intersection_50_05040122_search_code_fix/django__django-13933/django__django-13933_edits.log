### django/forms/models.py
<<<<<<< SEARCH
    default_error_messages = {
        'invalid_choice': _('Select a valid choice. That choice is not one of'
                            ' the available choices.'),
=======
    default_error_messages = {
        'invalid_choice': _('Select a valid choice. %(value)s is not one of'
                            ' the available choices.'),
>>>>>>> REPLACE

### django/db/models/fields/__init__.py
<<<<<<< SEARCH
        if self.choices is not None and value not in self.empty_values:
=======
        if self.choices is not None and value not in self.empty_values:
            invalid_choice_message = self.error_messages.get('invalid_choice', 'Select a valid choice. %(value)s is not one of the available choices.')
>>>>>>> REPLACE

### django/db/models/fields/__init__.py
<<<<<<< SEARCH
            raise exceptions.ValidationError(
                self.error_messages['invalid_choice'],
                code='invalid_choice',
=======
            raise exceptions.ValidationError(
                invalid_choice_message,
                code='invalid_choice',
>>>>>>> REPLACE
