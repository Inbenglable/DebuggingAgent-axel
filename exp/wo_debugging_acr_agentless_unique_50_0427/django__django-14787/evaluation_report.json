{
    "FAIL_TO_PASS": {
        "success": [],
        "failure": [
            "@method_decorator preserves wrapper assignments."
        ]
    },
    "PASS_TO_PASS": {
        "success": [],
        "failure": [
            "test_cache_page (decorators.tests.DecoratorsTest)",
            "Test for the require_safe decorator.",
            "The user_passes_test decorator can be applied multiple times (#9474).",
            "test_never_cache_decorator (decorators.tests.NeverCacheDecoratorTest)",
            "test_never_cache_decorator_http_request (decorators.tests.NeverCacheDecoratorTest)",
            "test_argumented (decorators.tests.MethodDecoratorTests)",
            "test_bad_iterable (decorators.tests.MethodDecoratorTests)",
            "@method_decorator can be used to decorate a class and its methods.",
            "test_descriptors (decorators.tests.MethodDecoratorTests)",
            "@method_decorator on a nonexistent method raises an error.",
            "@method_decorator on a non-callable attribute raises an error.",
            "A decorator that sets a new attribute on the method.",
            "test_preserve_attributes (decorators.tests.MethodDecoratorTests)",
            "test_preserve_signature (decorators.tests.MethodDecoratorTests)",
            "@method_decorator can accept a tuple of decorators."
        ]
    },
    "FAIL_TO_FAIL": {
        "success": [],
        "failure": []
    },
    "PASS_TO_FAIL": {
        "success": [],
        "failure": []
    },
    "status": "RESOLVED_NO"
}