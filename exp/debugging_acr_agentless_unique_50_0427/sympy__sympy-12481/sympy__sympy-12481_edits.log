### sympy/combinatorics/permutations.py
<<<<<<< SEARCH
        if has_dups(temp):
            if is_cycle:
                raise ValueError('there were repeated elements; to resolve '
                'cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))
            else:
                raise ValueError('there were repeated elements.')
=======
        if not is_cycle and has_dups(temp):
            raise ValueError('there were repeated elements.')
>>>>>>> REPLACE

### sympy/combinatorics/permutations.py
<<<<<<< SEARCH
            c = Cycle()
            for ci in args:
                c = c(*ci)
            aform = c.list()
=======
            aform = list(range(max(temp) + 1))
            for cycle in args:
                if cycle:
                    first = cycle[0]
                    for next in cycle[1:]:
                        aform[first], first = aform[next], aform[first]
                    aform[first] = first
>>>>>>> REPLACE
